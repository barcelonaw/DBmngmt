-- 1) List each loan payment (loan_no, payment_no, amount, method) 
-- that was paid on time and the payment was more than $15, 
-- ordered by loan_no in ascending order. (status = "On time")
SELECT loan_no, payment_no, amount, method
FROM Payment
WHERE status = 'On time' AND amount > 15;

-- 2) List all customers (ssn, first name, last name) who have at least one account 
-- with a balance more than $10000. Donâ€™t list a customer twice if they have more than one account satisfying the condition.
SELECT DISTINCT c.SSN, c.fname AS First_name, c.lname AS Last_name
FROM ((Customer c
INNER JOIN Owns o ON c.SSN = o.ssn)
INNER JOIN Account a ON o.acc_no = a.acc_no)
WHERE a.balance > 10000;

-- 3) List all customers (ssn, first name, last name) who own more than 2 accounts.
-- If an account is shared, it should also be counted.
SELECT c.SSN, c.fname AS First_name, c.lname AS Last_name
FROM ((Customer c
INNER JOIN Owns o ON c.SSN = o.ssn)
INNER JOIN Account a ON o.acc_no = a.acc_no)
GROUP BY c.SSN, c.fname, c.lname
HAVING COUNT(a.acc_no) >= 2;

-- 4) Retrieve customer details (SSN, first name, last name, phone) 
-- for the customer who owns the account '000000001'.
SELECT c.SSN, c.fname AS First_name, c.lname AS Last_name, c.phone
FROM Customer c
INNER JOIN Owns o ON c.SSN = o.ssn
WHERE o.acc_no = '000000001';

-- 5) List each loan payment (payment number, due date) 
-- for "John Smith" that has been paid by check.
-- Note: The provided SQL seems incomplete; the expected output is mentioned but not the query.

-- 6) List unique customer SSNs, first names, and last names 
-- who have borrowed loans.
SELECT DISTINCT c.SSN, c.fname AS First_name, c.lname AS Last_name
FROM Customer c
INNER JOIN Borrows b ON c.SSN = b.SSN;

-- 7) Count the number of loans for the customer "John Smith".
SELECT c.SSN, COUNT(b.loan_no) AS NumberOfLoans
FROM Customer c
INNER JOIN Borrows b ON c.SSN = b.SSN
WHERE c.fname = 'John' AND c.lname = 'Smith'
GROUP BY c.SSN;

-- 8) Calculate the total balance of accounts for each customer.
SELECT c.SSN, c.fname AS First_name, c.lname AS Last_name, SUM(a.balance) AS Total_Balance
FROM Customer c
INNER JOIN Owns o ON c.ssn = o.ssn
INNER JOIN Account a ON o.acc_no = a.acc_no
GROUP BY c.SSN, c.fname, c.lname;

-- 9) Retrieve customer SSNs, last names, branch names, and branch addresses
-- for customers whose preferred branch matches the branch they're associated with.
SELECT c.ssn, c.lname, b.name, b.address
FROM Customer c
INNER JOIN Branch b ON c.fv_branch = b.name;

-- 10) Retrieve customer SSNs, last names, and preferred branches 
-- for customers with a non-null preferred branch.
SELECT ssn, lname, fv_branch
FROM Customer
WHERE fv_branch IS NOT NULL;

-- 11) Retrieve the maximum account fee across all accounts.
SELECT MAX(fee) FROM Account;

-- 12) Retrieve loan numbers for loans with an interest rate greater than or equal 
-- to the maximum interest rate among all loans.
SELECT loan_no 
FROM Loan 
WHERE interest_rate >= (SELECT MAX(interest_rate) FROM Loan);
